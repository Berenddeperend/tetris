@import "./variables.scss";
@import "./highScore.scss";
@import "./animations.scss";
@import "./global.scss";
@import "./inputName.scss";



// prettier-ignore
.block {
  &.black { fill: $black; }
  &.light-blue { fill: $light-blue; }
  &.dark-blue { fill: $dark-blue; }
  &.orange { fill: $orange; }
  &.yellow { fill: $yellow; }
  &.green { fill: $green; }
  &.purple { fill: $purple; }
  &.red { fill: $red; }
}

.stage-container {
  border: 1px solid red;
}

.stage {
  position: relative;
  transition: opacity 2s;
  order: 2;

  // width: var(--stage-width);
  // display: flex;
  // justify-content: center;
  // align-items: center;

  @media(min-width: $breakpoint) { 
    order: 1;
  }

  &:after {
    content: "";
    position: absolute;
    width: 100%;
    height: var(--stage-height); //why cant i do 100%?
    top: 0;
    left: 0;
    pointer-events: none;
    opacity: 0;
    background: $black;
    transition: opacity 2s;
  }
  
  
  &.is-game-over {
    &::after {
      animation: fadein .4s steps(4, end);
      opacity: 0.7;
    }
  }
}

.game-over-container {
  position: absolute;
  top: 50%;
  left: 50%;
  z-index: 2;
  transform: translate(-50%, -50%);
  text-align: center;
  width: 100px;
  
  .game-over {
    font-size: 2.2rem;
    @include text-shadow(0.3rem, true);
    
    .letter {
      animation: wiggle 1.05s infinite;
      display: inline-block;
    }
  }
}

.splash {
  text-align: center;
  cursor: default;

  .title {
    padding-left: 0.4em;

    display: inline-block;
    font-size: 2.6rem;
    margin-bottom: 1rem;
    $shadow-distance: 0.1em;
    transition: text-shadow 0.5s;
    position: relative;
    @include text-shadow(0.3rem, true);

    .version {
      position: absolute;
      text-shadow: none;
      font-size: 1rem;
      bottom: 0.3em;
      margin-left: 1em;
      opacity: 0.2;
    }

  }
  
  .subtitle {
    padding-left: 0.4em;
  }

  .begin {
    margin-top: 4rem;
    .letter {
      @include text-shadow(0.1em, false);

      transition: transform 0.1s, text-shadow 0.2s;
      display: inline-block;
      cursor: default;
      min-width: 1.4rem;
      font-size: 1.4rem;
      animation: wiggle 1.05s infinite;
      animation-timing-function: ease-in-out;
    }
  }

  .social-container {
    position: fixed;
    bottom: 2rem;
    text-align: center;
    width: 100%;
    left: 0;
    
    > * {
      transition: opacity 0.4s;
      display: inline-block;
      margin: 0 2rem;
      opacity: 0.4;
    }

    > a {
      &:hover {
        opacity: 1;
      }
    }

  }

  // .social {
  //   // display: inline-block;
  //   // left: 50%;
  //   // transform: translateX(-50%);
  // }
}

svg {
  overflow: visible;
  filter: drop-shadow(0 0 0.2rem $orange);
}

.gridlines {
  z-index: 2;
  user-select: none;

  .rows,
  .columns {
    // stroke: darken($orange, 50%);
    stroke: $orange;
    stroke-linecap: square;
    // opacity: 0;
  }
}

.ui {
  order: 0;
  margin-top: 2rem;
  text-align: right;
  display: flex;
  width: 100%;
  justify-content: space-evenly;
  display: none;

  @media(min-width: $breakpoint) {
    display: block;
    order: 1;
    flex-direction: column;
    margin: 0 0 0 2rem;
    width: auto;
  }
}

.ui-block {
  margin-bottom: 2rem;
  border: 0.1rem solid $orange;
  padding: 1rem;
  position: relative;
  // min-width: 75px;
  box-shadow: $box-shadow;
  user-select: none;
  display: flex;
  align-items: center;
  justify-content: flex-end;

  .value {
    @include text-shadow(0.2rem, false);
    font-size: 2.2rem;
  }

  .label {
    font-size: 1rem;
    position: absolute;
    top: -0.7rem;
    left: 0.5rem;
    background: $black;
    // color: gray
    padding: 0 0.4rem 0 0.8rem;
  }
}

.queue svg {
  g {
    // transform: scale(0.75);
  }
}